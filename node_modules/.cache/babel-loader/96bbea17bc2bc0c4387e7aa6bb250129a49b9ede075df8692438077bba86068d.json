{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Event Handling 2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\nNIM : 11323059\nNama : Tasya Simamora\nKelas : D3TI-02\n*/\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Di sini Anda bisa menambahkan logika untuk melakukan validasi username dan password\n    // Misalnya, memanggil API untuk memeriksa kredensial\n\n    // Contoh sederhana: cek apakah username dan password tidak kosong\n    if (username.trim() !== '' && password.trim() !== '') {\n      setLoggedIn(true);\n      alert('Login berhasil!');\n    } else {\n      alert('Mohon masukkan username dan password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selamat datang, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"uppCGiJLOrKShQHaVIHHk2qND0Q=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","useState","password","setPassword","loggedIn","setLoggedIn","handleLogin","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Event Handling 2/src/App.js"],"sourcesContent":["/*\nNIM : 11323059\nNama : Tasya Simamora\nKelas : D3TI-02\n*/\n\nimport React from 'react';\n\nfunction LoginForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    // Di sini Anda bisa menambahkan logika untuk melakukan validasi username dan password\n    // Misalnya, memanggil API untuk memeriksa kredensial\n\n    // Contoh sederhana: cek apakah username dan password tidak kosong\n    if (username.trim() !== '' && password.trim() !== '') {\n      setLoggedIn(true);\n      alert('Login berhasil!');\n    } else {\n      alert('Mohon masukkan username dan password.');\n    }\n  };\n\n  return (\n    <div>\n      {loggedIn ? (\n        <p>Selamat datang, {username}!</p>\n      ) : (\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default LoginForm;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;;IAEA;IACA,IAAIP,QAAQ,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpDF,WAAW,CAAC,IAAI,CAAC;MACjBG,KAAK,CAAC,iBAAiB,CAAC;IAC1B,CAAC,MAAM;MACLA,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,EACGL,QAAQ,gBACPR,OAAA;MAAAa,QAAA,GAAG,kBAAgB,EAACV,QAAQ,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElCjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjB,QAAS;QAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjB,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEd,WAAY;QAAAG,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA3CQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}